name: Semantic version release and publish

permissions:
    contents: write # to be able to publish a GitHub release
    issues: write # to be able to comment on released issues
    pull-requests: write # to be able to comment on released pull requests
    id-token: write # to enable use of OIDC for npm provenance
    
on:
    push:
        branches: main
    workflow_dispatch:

jobs:
    semver:
        runs-on: ubuntu-latest
        outputs:
            new_release_published: ${{ steps.semantic-release.outputs.new_release_published }}
            release_version: ${{ steps.semantic-release.outputs.release_version }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: main
                token: ${{ secrets.PAT }}
                fetch-depth: 0
            
            - id: semantic-release
              name: Semantic Release
              uses: cycjimmy/semantic-release-action@v4
              with:
                semantic_version: 21.1.1
                branches: main
                dry_run: false
                extra_plugins:
                    semantic-release-unsquash
                    "@semantic-release/git"
              env:
                GITHUB_TOKEN: ${{ secrets.PAT }}
                NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Notify release 
              if: steps.semantic-release.outputs.new_release_published == 'true'
              run: |
                curl -X POST  \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${{ secrets.PAT }}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    https://api.github.com/repos/Outburn-IL/fume-engine/actions/workflows/repo-sync.yml/dispatches \
                    -d '{"ref": "main"}'

    docker-build-push:
        name: Build & Push Docker image
        needs: semver
        if: needs.semver.outputs.new_release_published == 'true'
        runs-on: ubuntu-latest
        env:
            DOCKER_IMAGE_NAME: outburnltd/fume-fhir-converter
        steps:
            - name: Checkout (release commit)
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0

            - name: Ensure tag is fetched
              run: |
                git fetch --tags --force
                echo "Tags fetched:"; git tag -l | tail -n 10

            - name: Resolve version
              id: version
              run: |
                VERSION="${{ needs.semver.outputs.release_version }}"
                echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
                echo "Resolved release version: $VERSION"

            - name: Checkout tag commit
              run: |
                git checkout "v${RELEASE_VERSION}" || git checkout "${RELEASE_VERSION}" || { echo "Tag for version not found"; exit 1; }
                echo "On commit: $(git rev-parse HEAD)"

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build image
              run: |
                docker build --tag "$DOCKER_IMAGE_NAME:$RELEASE_VERSION" .

            - name: Push image
              run: |
                docker push "$DOCKER_IMAGE_NAME:$RELEASE_VERSION"
                docker tag "$DOCKER_IMAGE_NAME:$RELEASE_VERSION" "$DOCKER_IMAGE_NAME:latest"
                docker push "$DOCKER_IMAGE_NAME:latest"
